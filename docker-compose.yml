version: "3.8"

services:
  # postgres db
  db:
    image: postgres:15-alpine
    container_name: notes-db
    restart: always
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # nest backend
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: notes-backend
    restart: always
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: ${NODE_ENV}
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_DATABASE: ${DB_DATABASE}
      JWT_SECRET: ${JWT_SECRET}
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./backend:/app
      - /app/node_modules

  # angular frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: notes-frontend
    restart: always
    ports:
      - "4200:4200"
    environment:
      API_URL: ${API_URL}
    depends_on:
      - backend
    volumes:
      - ./frontend:/app
      - frontend_node_modules:/app/node_modules

volumes:
  postgres_data:
  frontend_node_modules:
